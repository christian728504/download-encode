import polars as pl

schema = {
    "@id": pl.Utf8,
    "@type": pl.List(pl.Utf8),
    "accession": pl.Utf8,
    "analysis_step_version": pl.Struct([
        ("schema_version", pl.Utf8),
        ("aliases", pl.List(pl.Utf8)),
        ("software_versions", pl.List(pl.Struct([
            ("schema_version", pl.Utf8),
            ("aliases", pl.List(pl.Utf8)),
            ("software", pl.Struct([
                ("aliases", pl.List(pl.Utf8)),
                ("references", pl.List(pl.Utf8)),
                ("date_created", pl.Utf8),
                ("@type", pl.List(pl.Utf8)),
                ("submitted_by", pl.Utf8),
                ("software_type", pl.List(pl.Utf8)),
                ("description", pl.Utf8),
                ("lab", pl.Utf8),
                ("title", pl.Utf8),
                ("used_by", pl.List(pl.Utf8)),
                ("uuid", pl.Utf8),
                ("url", pl.Utf8),
                ("source_url", pl.Utf8),
                ("schema_version", pl.Utf8),
                ("award", pl.Utf8),
                ("versions", pl.List(pl.Utf8)),
                ("name", pl.Utf8),
                ("@id", pl.Utf8),
                ("status", pl.Utf8),
                ("purpose", pl.List(pl.Utf8))
            ])),
            ("date_created", pl.Utf8),
            ("@type", pl.List(pl.Utf8)),
            ("submitted_by", pl.Utf8),
            ("@id", pl.Utf8),
            ("downloaded_url", pl.Utf8),
            ("version", pl.Utf8),
            ("uuid", pl.Utf8),
            ("status", pl.Utf8)
        ]))),
        ("date_created", pl.Utf8),
        ("analysis_step", pl.Struct([
            ("aliases", pl.List(pl.Utf8)),
            ("analysis_step_types", pl.List(pl.Utf8)),
            ("documents", pl.List(pl.Utf8)),
            ("date_created", pl.Utf8),
            ("@type", pl.List(pl.Utf8)),
            ("input_file_types", pl.List(pl.Utf8)),
            ("submitted_by", pl.Utf8),
            ("current_version", pl.Utf8),
            ("title", pl.Utf8),
            ("step_label", pl.Utf8),
            ("uuid", pl.Utf8),
            ("schema_version", pl.Utf8),
            ("output_file_types", pl.List(pl.Utf8)),
            ("major_version", pl.Utf8),
            ("pipelines", pl.List(pl.Struct([
                ("analysis_steps", pl.List(pl.Utf8)),
                ("pipeline_version", pl.Utf8),
                ("aliases", pl.List(pl.Utf8)),
                ("references", pl.List(pl.Utf8)),
                ("documents", pl.List(pl.Utf8)),
                ("assay_term_names", pl.List(pl.Utf8)),
                ("date_created", pl.Utf8),
                ("@type", pl.List(pl.Utf8)),
                ("submitted_by", pl.Utf8),
                ("accession", pl.Utf8),
                ("lab", pl.Utf8),
                ("title", pl.Utf8),
                ("uuid", pl.Utf8),
                ("source_url", pl.Utf8),
                ("schema_version", pl.Utf8),
                ("award", pl.Utf8),
                ("alternate_accessions", pl.List(pl.Utf8)),
                ("@id", pl.Utf8),
                ("status", pl.Utf8)
            ]))),
            ("versions", pl.List(pl.Utf8)),
            ("name", pl.Utf8),
            ("@id", pl.Utf8),
            ("status", pl.Utf8)
        ])),
        ("@type", pl.List(pl.Utf8)),
        ("name", pl.Utf8),
        ("submitted_by", pl.Utf8),
        ("@id", pl.Utf8),
        ("uuid", pl.Utf8),
        ("status", pl.Utf8),
        ("minor_version", pl.Utf8)
    ]),
    "assay_term_name": pl.Utf8,
    "assembly": pl.Utf8,
    "award": pl.Struct([
        ("project", pl.Utf8)
    ]),
    "biological_replicates": pl.List(pl.Utf8),
    "biosample_ontology": pl.Struct([
        ("organ_slims", pl.List(pl.Utf8)),
        ("term_name", pl.Utf8)
    ]),
    "dataset": pl.Utf8,
    "date_created": pl.Utf8,
    "derived_from": pl.List(pl.Utf8),
    "file_format": pl.Utf8,
    "file_size": pl.Int64,
    "file_type": pl.Utf8,
    "href": pl.Utf8,
    "lab": pl.Struct([
        ("title", pl.Utf8)
    ]),
    "origin_batches": pl.List(pl.Utf8),
    "output_category": pl.Utf8,
    "output_type": pl.Utf8,
    "quality_metrics": pl.List(pl.Utf8),
    "simple_biosample_summary": pl.Utf8,
    "status": pl.Utf8,
    "step_run": pl.Struct([
        ("schema_version", pl.Utf8),
        ("award", pl.Utf8),
        ("aliases", pl.List(pl.Utf8)),
        ("date_created", pl.Utf8),
        ("@type", pl.List(pl.Utf8)),
        ("submitted_by", pl.Utf8),
        ("@id", pl.Utf8),
        ("lab", pl.Utf8),
        ("uuid", pl.Utf8),
        ("analysis_step_version", pl.Utf8),
        ("status", pl.Utf8)
    ]),
    "technical_replicates": pl.List(pl.Utf8),
    "title": pl.Utf8
}